#see http://ros.org/wiki/dwa_local_planner?distro=groovy for param description
DWAPlannerROS:
  #default 2.5 -> with this value the robot sometimes gets to close to the wall when leaving a goal position in narrow corridors, causing dwa planner to have problems
  acc_lim_x: 1.0
  
  acc_lim_y: 0.0
  
  #default 3.2
  acc_lim_th: 2.0
  
  min_vel_y: 0.0
  max_vel_y: 0.0
  max_rot_vel: 1.0
  min_rot_vel: 0.4

  yaw_goal_tolerance: 0.1
  
  #default:0.1 -> with this value the robot sometimes has troubles achieving the goal, due to low tolerance
  xy_goal_tolerance: 0.3
  
  
  # if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so.
  latch_xy_goal_tolerance: true
 

  # sim_time old: 2.1; ROS default 1.7 
  # (observation: using a smaller value lets the robot stay more accurately on its planned global trajectory, eg the robot almost turns on the spot when doing a 180 turn (similar behaviour when reaching a goal) => less problems with door passing [at least in simulation]). 
  sim_time: 0.8
  

#cost =  path_distance_bias * (distance to path from the endpoint of the trajectory in meters)  + goal_distance_bias * (distance to local goal from the endpoint of the trajectory in meters)  + occdist_scale * (maximum obstacle cost along the trajectory in obstacle cost (0-254))
  # by increasing the ratio between path distance and (local) goal distance the robot stays better on its global plan (by which it will meet its local goals anyway). 
  path_distance_bias: 1.0 # old: 32.0 #default:32
  goal_distance_bias: 0.5 # old: 24.0 #default:24
  occdist_scale: 0.01 #default:0.01

  
  oscillation_reset_dist: 0.05


  prune_plan: true

  holonomic_robot: false



